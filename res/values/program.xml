<?xml version="1.0" encoding="utf-8"?>
<resources>
<string-array name="day">
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>27</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>29</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
<item>28</item>
</string-array>

<string-array name="room">
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>202-B</item>
<item>202-A</item>
<item>202-A</item>
<item>202-A</item>
<item>201-B</item>
<item>201-B</item>
<item>Foyer</item>
<item>Foyer</item>
<item>Multi Purpose Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>202-B</item>
<item>202-A</item>
<item>202-A</item>
<item>202-A</item>
<item>201-B</item>
<item>201-B</item>
<item>201-B</item>
<item>201-B</item>
<item>201-A</item>
<item>201-A</item>
<item>Foyer</item>
<item>Multi Purpose Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Main Convention Hall</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>Convention Hall 200</item>
<item>202-B</item>
<item>202-B</item>
<item>202-A</item>
<item>202-A</item>
<item>202-A</item>
<item>201-B</item>
<item>201-B</item>
<item>201-B</item>
<item>Foyer</item>
<item>BookStore JUNKDO</item>
<item>BookStore JUNKDO</item>
<item>BookStore JUNKDO</item>
<item>BookStore JUNKDO</item>
<item>BookStore JUNKDO</item>
<item>BookStore JUNKDO</item>
<item>BookStore JUNKDO</item>
<item>BookStore JUNKDO</item>
<item>BookStore JUNKDO</item>
<item>BookStore JUNKDO</item>
<item>BookStore JUNKDO</item>
<item>202-B</item>
<item>202-B</item>
<item>202-B</item>
<item>202-B</item>
<item>202-B</item>
<item>202-B</item>
<item>202-B</item>
<item>202-B</item>
<item>202-B</item>
<item>202-B</item>
<item>202-B</item>
<item>202-B</item>
<item>202-B</item>
<item>202-B</item>
<item>202-B</item>
<item>202-B</item>
<item>202-B</item>
<item>202-B</item>
</string-array>

<string-array name="start">
<item>12:30</item>
<item>13:00</item>
<item>14:00</item>
<item>14:30</item>
<item>15:00</item>
<item>15:30</item>
<item>16:00</item>
<item>17:00</item>
<item>17:30</item>
<item>18:00</item>
<item>14:00</item>
<item>14:30</item>
<item>15:00</item>
<item>15:30</item>
<item>16:00</item>
<item>16:30</item>
<item>17:00</item>
<item>17:30</item>
<item>18:00</item>
<item>17:30</item>
<item>10:00</item>
<item>14:00</item>
<item>16:00</item>
<item>14:00</item>
<item>16:00</item>
<item>13:00</item>
<item>13:00</item>
<item>19:00</item>
<item>09:30</item>
<item>11:00</item>
<item>12:00</item>
<item>13:30</item>
<item>14:00</item>
<item>14:30</item>
<item>15:00</item>
<item>15:30</item>
<item>16:30</item>
<item>17:00</item>
<item>17:00</item>
<item>17:00</item>
<item>17:00</item>
<item>17:00</item>
<item>17:00</item>
<item>17:00</item>
<item>17:00</item>
<item>17:00</item>
<item>17:00</item>
<item>17:00</item>
<item>09:30</item>
<item>10:00</item>
<item>10:30</item>
<item>12:00</item>
<item>13:30</item>
<item>14:30</item>
<item>15:00</item>
<item>15:30</item>
<item>16:30</item>
<item>12:00</item>
<item>09:30</item>
<item>12:00</item>
<item>13:30</item>
<item>09:30</item>
<item>12:00</item>
<item>13:30</item>
<item>15:00</item>
<item>12:00</item>
<item>13:30</item>
<item>12:00</item>
<item>18:30</item>
<item>09:30</item>
<item>10:00</item>
<item>10:30</item>
<item>11:00</item>
<item>12:00</item>
<item>13:30</item>
<item>14:30</item>
<item>15:00</item>
<item>15:30</item>
<item>16:00</item>
<item>16:30</item>
<item>17:30</item>
<item>09:30</item>
<item>10:00</item>
<item>10:30</item>
<item>11:00</item>
<item>11:30</item>
<item>12:00</item>
<item>13:30</item>
<item>14:00</item>
<item>14:30</item>
<item>15:00</item>
<item>15:30</item>
<item>16:00</item>
<item>10:00</item>
<item>13:30</item>
<item>10:00</item>
<item>12:00</item>
<item>13:30</item>
<item>10:00</item>
<item>12:00</item>
<item>13:30</item>
<item>10:00</item>
<item>12:00</item>
<item>12:00</item>
<item>15:00</item>
<item>15:00</item>
<item>15:00</item>
<item>16:30</item>
<item>12:00</item>
<item>12:00</item>
<item>12:00</item>
<item>14:30</item>
<item>14:30</item>
<item>13:30</item>
<item>14:00</item>
<item>14:30</item>
<item>15:00</item>
<item>15:30</item>
<item>15:50</item>
<item>16:10</item>
<item>16:30</item>
<item>17:00</item>
<item>17:00</item>
<item>17:00</item>
<item>17:00</item>
<item>17:00</item>
<item>17:00</item>
<item>17:00</item>
<item>17:00</item>
<item>17:00</item>
<item>17:00</item>
</string-array>

<string-array name="end">
<item>13:00</item>
<item>14:00</item>
<item>14:30</item>
<item>15:00</item>
<item>15:30</item>
<item>16:00</item>
<item>17:00</item>
<item>17:30</item>
<item>18:00</item>
<item>19:00</item>
<item>14:30</item>
<item>15:00</item>
<item>15:30</item>
<item>16:00</item>
<item>16:30</item>
<item>17:00</item>
<item>17:30</item>
<item>18:00</item>
<item>19:00</item>
<item>19:00</item>
<item>12:30</item>
<item>16:00</item>
<item>18:00</item>
<item>16:00</item>
<item>18:00</item>
<item>15:30</item>
<item>15:30</item>
<item>19:30</item>
<item>11:00</item>
<item>12:00</item>
<item>13:30</item>
<item>14:00</item>
<item>14:30</item>
<item>15:00</item>
<item>15:30</item>
<item>16:30</item>
<item>17:00</item>
<item>18:00</item>
<item>18:00</item>
<item>18:00</item>
<item>18:00</item>
<item>18:00</item>
<item>18:00</item>
<item>18:00</item>
<item>18:00</item>
<item>18:00</item>
<item>18:00</item>
<item>18:00</item>
<item>10:00</item>
<item>10:30</item>
<item>11:00</item>
<item>13:30</item>
<item>14:30</item>
<item>15:00</item>
<item>15:30</item>
<item>16:30</item>
<item>17:00</item>
<item>18:00</item>
<item>11:00</item>
<item>13:30</item>
<item>18:00</item>
<item>11:00</item>
<item>13:30</item>
<item>15:00</item>
<item>16:30</item>
<item>13:30</item>
<item>17:00</item>
<item>17:00</item>
<item>20:30</item>
<item>10:00</item>
<item>10:30</item>
<item>11:00</item>
<item>12:00</item>
<item>13:30</item>
<item>14:30</item>
<item>15:00</item>
<item>15:30</item>
<item>16:00</item>
<item>16:30</item>
<item>17:30</item>
<item>18:00</item>
<item>10:00</item>
<item>10:30</item>
<item>11:00</item>
<item>11:30</item>
<item>12:00</item>
<item>13:30</item>
<item>14:00</item>
<item>14:30</item>
<item>15:00</item>
<item>15:30</item>
<item>16:00</item>
<item>16:30</item>
<item>12:00</item>
<item>15:00</item>
<item>12:00</item>
<item>13:30</item>
<item>16:00</item>
<item>12:00</item>
<item>13:30</item>
<item>16:30</item>
<item>16:30</item>
<item>13:30</item>
<item>13:30</item>
<item>15:30</item>
<item>15:30</item>
<item>15:30</item>
<item>17:00</item>
<item>13:30</item>
<item>13:30</item>
<item>13:30</item>
<item>15:00</item>
<item>15:00</item>
<item>14:00</item>
<item>14:30</item>
<item>15:00</item>
<item>15:30</item>
<item>15:50</item>
<item>16:10</item>
<item>16:30</item>
<item>17:00</item>
<item>18:00</item>
<item>18:00</item>
<item>18:00</item>
<item>18:00</item>
<item>18:00</item>
<item>18:00</item>
<item>18:00</item>
<item>18:00</item>
<item>18:00</item>
<item>18:00</item>
</string-array>

<string-array name="title">
<item>Opening</item>
<item>(To Be Announced)</item>
<item>jpmobile on Rails 3</item>
<item>Open social application development for cell-phones to begin in Ruby on Rails</item>
<item>Break</item>
<item>Building Real Time Web</item>
<item>We can make the GC X times slower than the original</item>
<item>Break</item>
<item>The basis of making DSL with Ruby</item>
<item>Best Imitation of Your Class</item>
<item>Feels Like Ruby</item>
<item>User Experience for Library Designers</item>
<item>Break</item>
<item>Rubygems, Bundler, and the future</item>
<item>Truth and Consequences: Handling Ruby 1.9 Encodings in Rails</item>
<item>A frog in a well does not know the great sea</item>
<item>Break</item>
<item>My many failed products</item>
<item>Coding for fun, and having fun coding</item>
<item>World Wide Ruby Conferences</item>
<item>Ruby developer meeting at Tsukuba</item>
<item>Monthly 'toRuby' workshop in Tsukuba</item>
<item>Head First "Ordinary" System Development</item>
<item>rake:money</item>
<item>Ruby Business Owner Kaigi</item>
<item>Let's create your own T-shirt designed by Ruby at RubyKaigi 2010!!</item>
<item>The Origami Ruby (paper craft) Generated by The Ruby</item>
<item>Community Night</item>
<item>Ruby 1.9.2 is released! / Ruby committers Q &amp; A</item>
<item>Keynote</item>
<item>Break</item>
<item>Esoteric Obfuscated Ruby Programming</item>
<item>Daily Ruby</item>
<item>Ruby Reference Manual Renewal Project 2010 Summer</item>
<item>Break</item>
<item>Ruby API is Improved Unix API</item>
<item>Break</item>
<item>[Lightning Talks] ARToolKit Ruby Binding</item>
<item>[Lightning Talks] Toward creating a single stand-alone executable of Ruby</item>
<item>[Lightning Talks] What is few?</item>
<item>[Lightning Talks] Toward Lightning RubyVM</item>
<item>[Lightning Talks] MessagePack, a cross-language communication system</item>
<item>[Lightning Talks] Let's calculate easily civil days by using "Ruby"</item>
<item>[Lightning Talks] Introducing the Lingo Project: A New Generationi Text Input System Leveraging Non-native English Writing</item>
<item>[Lightning Talks] babushka―test-driven sysadmin for rubyists</item>
<item>[Lightning Talks] parse.y Fam Tour</item>
<item>[Lightning Talks] The Timeless Way of E-Publishing with Ruby</item>
<item>[Lightning Talks] My Report of "Ruby Summer of Code 2010" - Road to be a stdlib -</item>
<item>Rocking the enterprise with Ruby</item>
<item>Rails to Sinatra: What is ready</item>
<item>Mapping the world with DataMapper</item>
<item>Break</item>
<item>The Necessity and Implementation of Speedy Tests</item>
<item>Seamless Integration Testing</item>
<item>Break</item>
<item>A Metaprogramming Spell Book</item>
<item>Break</item>
<item>JRubyKaigi 2010</item>
<item>tDiaryKaigi</item>
<item>Asakusa.rb in Tsukuba</item>
<item>Pair Programming Cultural Exchange</item>
<item>jpmobile Kaigi 2010</item>
<item>PGP Keysigning Party</item>
<item>M-x ruby-and-emacs-workshop</item>
<item>Cucumber hands-on</item>
<item>Nihon Ruby-no-Kai meeting</item>
<item>Vim</item>
<item>The Origami Ruby (paper craft) Generated by The Ruby</item>
<item>Official Conference Party</item>
<item>Cloud management with Ruby</item>
<item>Distributed storage system with ruby</item>
<item>The last decade of RWiki and lazy me</item>
<item>Practical Ruby Projects with MongoDB</item>
<item>Break</item>
<item>IronRuby - What's in it for Rubyists?</item>
<item>Break</item>
<item>The spread of enterprise Ruby at hot spot SHIMANE</item>
<item>There Is No Spoon -- Think Global, Act Regional</item>
<item>Break</item>
<item>Keynote</item>
<item>Closing</item>
<item>The future of the bigdecimal library and the number system of Ruby</item>
<item>NArray and scientific computing with Ruby</item>
<item>How Did Yarv2llvm Fail</item>
<item>AOT Compiler for Ruby</item>
<item>Memory Profiler for Ruby</item>
<item>Break</item>
<item>How to create Ruby reference manual search Web application with Ruby 1.9 groonga and rroonga</item>
<item>Now you're thinking with virtual clocks</item>
<item>Break</item>
<item>How to survive in after Rails' time</item>
<item>How To Create Beautiful Template Engine Which Never Break HTML Design</item>
<item>Break</item>
<item>Regional RubyKaigi Kaigi</item>
<item>We're rubyists living abroad. Any questions?</item>
<item>Ruby Game Developers Kaigi</item>
<item>Asakusa.rb in Tsukuba</item>
<item>TermtterKaigi</item>
<item>Ruby meets LDAP choices and case</item>
<item>Ruby powering 9 million dining tables</item>
<item>Making MS-Win32 Ruby Hands-ON</item>
<item>The Origami Ruby (paper craft) Generated by The Ruby</item>
<item>[Autograph Session] メタプログラミングRuby</item>
<item>[Autograph Session] JavaによるRESTfulシステム構築</item>
<item>[Autograph Session] Rubyレシピブック 第3版 303の技</item>
<item>[Autograph Session] たのしいRuby 第3版</item>
<item>[Autograph Session] Rubyベストプラクティス</item>
<item>[Autograph Session] 情熱プログラマー</item>
<item>[Autograph Session] JRuby on Rails実践開発ガイド</item>
<item>[Autograph Session] JRuby on Railsシステム構築入門</item>
<item>[Autograph Session] Google Wave入門</item>
<item>[Autograph Session] Head First Rails</item>
<item>[Autograph Session] ガベージコレクションのアルゴリズムと実装</item>
<item>[JRubyKaigi] Keynote - JRuby: Pony Show</item>
<item>[JRubyKaigi] Want to use Ruby from Java? RedBridge makes it pretty easy!</item>
<item>[JRubyKaigi] Rubyist, it's time to develop your Rails app on Google App Engine.</item>
<item>[JRubyKaigi] Break</item>
<item>[JRubyKaigi] 10 things : How to enhance the power of JRuby on Rails using Java EE technology</item>
<item>[JRubyKaigi] MapReduce by JRuby and DSL ~ Hadoop Papyrus</item>
<item>[JRubyKaigi] JRuby Hacking Guide</item>
<item>[JRubyKaigi] Break</item>
<item>[JRubyKaigi Lightning Talks] Introduction of Japan JRuby User Group</item>
<item>[JRubyKaigi Lightning Talks] ROMA on JRuby</item>
<item>[JRubyKaigi Lightning Talks] All right, then, JRuby!</item>
<item>[JRubyKaigi Lightning Talks] Extreme performance with Mirah and Dubious</item>
<item>[JRubyKaigi Lightning Talks] Rava on JRuby</item>
<item>[JRubyKaigi Lightning Talks] Testing Your Code with JRuby</item>
<item>[JRubyKaigi Lightning Talks] RJB - another choice for Ruby and Java interoperability</item>
<item>[JRubyKaigi Lightning Talks] Play swing and JDBC with Rubeus</item>
<item>[JRubyKaigi Lightning Talks] Kink: developing a programming language on the JVM</item>
<item>[JRubyKaigi Lightning Talks] How to make visualize card application using JRuby?</item>
</string-array>

<string-array name="speaker">
<item></item>
<item>To Be Announced</item>
<item>Shin-ichiro OGAWA</item>
<item>Masaki Yamada</item>
<item></item>
<item>Makoto Inoue</item>
<item>nari</item>
<item></item>
<item>Yasuko Ohba</item>
<item>Shugo Maeda</item>
<item>Sarah Mei</item>
<item>geemus</item>
<item></item>
<item>Carl Lerche</item>
<item>Yehuda Katz</item>
<item>Sarah Allen</item>
<item></item>
<item>jugyo</item>
<item>tenderlove</item>
<item>Kuniaki IGARASHI</item>
<item>Ruby core team</item>
<item>Shouichi Nakauchi</item>
<item>Eiwa System Management, Inc.</item>
<item>Ayumu Aizawa / Ouka Yuka</item>
<item>Takeyuki FUJIOKA</item>
<item>Yasuo Yoshikawa</item>
<item>Hiroyuki Shimura</item>
<item></item>
<item>Yugui, Shugo Maeda</item>
<item>Matz</item>
<item></item>
<item>Yusuke Endoh</item>
<item>Kazuhiro NISHIYAMA</item>
<item>okkez</item>
<item></item>
<item>Tanaka Akira</item>
<item></item>
<item>Urabe, Shyouhei</item>
<item>Hidetoshi NAGAI</item>
<item>Shota Fukumori/@sora_h</item>
<item>Koichi Sasada</item>
<item>Sadayuki Furuhashi</item>
<item>Yoshihiko Hara</item>
<item>Kazki Matz</item>
<item>Ben Hoskings</item>
<item>Ando Yasushi</item>
<item>Masayoshi Takahashi</item>
<item>Tadashi Saito</item>
<item>Munjal Budhabhatti And Sudhindra Rao</item>
<item>Jiang Wu</item>
<item>Ted Han</item>
<item></item>
<item>Jake Scruggs</item>
<item>paulelliott</item>
<item></item>
<item>Paolo "Nusco" Perrotta</item>
<item></item>
<item>Koichiro Ohba / Akasaka.rb</item>
<item>SHIBATA Hiroshi</item>
<item>Akira Matsuda</item>
<item>Sarah Mei</item>
<item>Shin-ichiro OGAWA</item>
<item>Shyouhei Urabe w/ Yugui</item>
<item>Zev Blut</item>
<item>MOROHASHI Kyosuke</item>
<item>Koji Shimada</item>
<item>Kana</item>
<item>Hiroyuki Shimura</item>
<item></item>
<item>Kei Hamanaka , Yuichi Saotome</item>
<item>Toshiyuki Terashita</item>
<item>Masatoshi SEKI</item>
<item>Alex Sharp</item>
<item></item>
<item>Shay Friedman</item>
<item></item>
<item>Hiroshi Yoshioka</item>
<item>Shintaro Kakutani</item>
<item></item>
<item>Chad Fowler</item>
<item></item>
<item>Kenta Murata</item>
<item>Masahiro Tanaka</item>
<item>Hideki Miura</item>
<item>Satoshi Shiba</item>
<item>Tetsu Soh</item>
<item></item>
<item>Kouhei Sutou</item>
<item>Tom Lieber</item>
<item></item>
<item>SHIBATA Hiroshi</item>
<item>Makoto Kuwata</item>
<item></item>
<item>Koji Shimada</item>
<item>Kazuhiko</item>
<item>kumaryu</item>
<item>Akira Matsuda</item>
<item>jugyo</item>
<item>Kazuaki Takase</item>
<item>Kenta Hashimoto</item>
<item>Akio Tajima aka arton</item>
<item>Hiroyuki Shimura</item>
<item>角征典, Paolo Perrotta</item>
<item>arton</item>
<item>青木峰郎, 後藤裕蔵, 高橋征義, まつもとゆきひろ</item>
<item>高橋征義, 後藤裕蔵, まつもとゆきひろ</item>
<item>高橋征義</item>
<item>Chad Fowler</item>
<item>大場光一郎, 大場寧子, 田中祐樹</item>
<item>橋本吉治</item>
<item>あんどうやすし</item>
<item>松田明</item>
<item>中村 成洋</item>
<item>Charles O.Nutter , Thomas Enebo</item>
<item>Yoko Harada</item>
<item>Takeru SASAKI</item>
<item></item>
<item>Yoshiharu HASHIMOTO</item>
<item>Koichi Fujikawa</item>
<item>Hiroshi NAKAMURA</item>
<item></item>
<item>Koichi Fujikawa</item>
<item>Muga Nishizawa</item>
<item>Hidekuni Kajita</item>
<item>John Woodell</item>
<item>Koichiro Ohba</item>
<item>Ayumu Aizawa</item>
<item>arton</item>
<item>Takeshi Akima</item>
<item>Taku Miyakawa</item>
<item>Hiroki Kondo</item>
</string-array>

<string-array name="desc">
<item></item>
<item>To Be Announced (We're sorry, at Jeremy's request, his keynote has been cancelled)</item>
<item>Jpmobile is a Rails plugin for Japanese mobile phones. This plugin features the ability to convert Japanese emoticons and Japanese kanji codes, and session management for mobile phones which can't handle HTTP cookies. In this talk, I will introduce how we rebuilt the jpmobile codebase to support Rack applications such as Rails 3 and Sinatra.</item>
<item>In the world of the open social application development for cell-phones, PHP is a major language, but the development using Ruby on Rails is possible. I show the know-how which we got through development of our product "Sweets Collection" and introduce open social application development using Ruby on Rails.</item>
<item></item>
<item>The real time web is not about adding chat on your website. It's not really about having stock tickers. The most interesting aspect of the realtime web is to be found in augmenting the web that we already know. We can add realtime functionally to our applications as another layer of fidelity. 
This is our story (New Bamboo, London, UK) of experimenting various real time web technologies and coming up with our own solutions (http://www.pusherapp.com). This is not about explaining how to use our solutions, but about sharing exciting opportunities and new technical challenges HTML5 WebSocket brings when you build real time web.</item>
<item>The presentation introduces the technique and a result about Lazy Sweep GC for CRuby GC. In addition, I introduce the prospects of the future GC improvement.</item>
<item></item>
<item>Ruby is well known as a language with which you can create your own DSL easily. Making DSL with Ruby is really easy, but there seem to be many developers who have not tried to make DSL with Ruby by design. In my opinion, there is no clear boundary between 'Useful APIs' and DSL. However, we can always judge whether a code is like DSL or not, that means, we can create DSL by design. In this talk, I'll start by looking into what DSL is and when to use it. After that I'll talk what concepts, habits and techniques you need to make your own DSL, showing typical examples from famous DSL codes like Rails, RSpec and so on.</item>
<item>Ruby's open classes contribute to extensibility of applications such as Ruby on Rails. However, they sometimes cause serious conflicts between class extensions. This talk illustrates problems of open classes, and propose a resolution by which classes can be refined locally.

Keywords: selector namespace, classbox, context-oriented programming</item>
<item>For a Rubyist, writing Javascript is the worst part of working on a Ruby web application. Those clean, modern UIs are often made possible by incredibly complex Javascript. The helpers inevitably get in the way, and you end up writing most of it by hand.

It is painful.

But you can make writing Javascript code feel more like writing Ruby code. I will show techniques that go beyond "unobtrusive" and turn Javascript into a first-class citizen in your Ruby application. Make your Javascript more joyful!</item>
<item>I've written "a lot of code":http://github.com/geemus, both hobby and work, over the last year, and looking back I can't help but think that writing code for yourself is easy; it's writing code for others can be tough. In this session, I'll share some examples of good and bad practices gathered in my years writing code and libraries, and discuss how to get past being too close to the problem. I'll talk specifically about growing your work into something anybody (and hopefully everybody) will use.</item>
<item></item>
<item>Rubygems has served the community well for many years. However, as applications become more and more complex, certain problems arise. Bundler was created to solve some of those problems and has been evolving rapidly based on community feedback. It's time to look at the current state of affairs and think about Rubygems 2.0. What parts of bundler could be moved upstream and what problems remain to be solved?</item>
<item>Ruby 1.9 adds support for many different encodings, making it possible to write Ruby web programs that can handle non-English characters well. However, these changes have had many consequences. At the beginning, the new encoding support has introduced much confusion in simple, English-only Rails applications and applications relying heavily on Unicode. Yehuda will explain the common problems caused by the changes, talk about what Rails has done to eliminate many of them, and what the Ruby community can do to make writing internationalized programs easier.</item>
<item>When building an application it is easy to forget that most applications today are available globally and used by people who speak many languages. You may create user interface in English or Japanese, but people may choose to type their data in their native language. Web browsers will allow people to enter text in almost any script, and if you are lucky it will "just work" ... but often it needs a little more attention. Sarah will share anecdotes from her adventures building Mightyverse, a multi-lingual database of native language video recordings. She will highlight details of how to get unicode text in and out of a database well as how to handle multibyte text in Ruby.</item>
<item></item>
<item>I will talk about my many failed products, and a few of my successful ones. My products can be found here: http://github.com/jugyo</item>
<item>Programming for fun, or having fun programming. Ruby is the best language for both! Let's talk about programming after we've punched out from work, the programming we can do while drinking a beer, and the programming we can do to make our friends laugh. We'll take a look at projects built for fun, as well as projects built to have fun! We'll dissect them to figure out what makes them tick, then 
extract techniques that we can use with our day to day tasks.</item>
<item>There are many Ruby/Rails conferences, "RubyKaigi"s and Ruby/Rails meetups throughout the world, but we can only participate in a few of these. I'd like to use the "Lightening Talk" style to introduce some of the people running these other meetups. You may learn about a new meetup to visit, or give you ideas for your own m0eetup.

Speakers

Pat Allan 
Rails Camps 
http://railscamps.com/

Chad Fowler 
Rubyconf 
http://rubyconf.org/

Jiang Wu 
Rubyconf China 
http://rubyconfchina.org/

Daniel Bovensiepen 
EuRuKo 
http://euruko2011.org/

Masayoshi Takahashi 
RubyKaigi 
http://rubykaigi.org/</item>
<item>We will hold a meeting about development of Ruby.</item>
<item>Monthly 'toRuby' workshop that always holds in Nasu area comes to here Tsukuba and holds the same workshop as usual. Since we are going to prepare some subject maters, you will be able to enjoy programing Ruby. Please bring your PC for Ruby programing.

The Nasu area is located in an only 150km north direction from Tokyo. Nasu is Tochigi-ken Nasushiobara city formally. 'to' of toTuby is 'To' of Tochigi-ken. Now, we are having programming and a discussion using the book of Mr. Masatoshi Seki's dRuby. Please look at http://pub.cozmixng.org/~the-rwiki/rw-cgi.rb?cmd=view;name=toRuby for details. (This page is Japanese only.) Moreover, also about the contents of our event performed by RubyKaigi, we are going to notify in the above-mentioned website. Thank you.</item>
<item>We, Eiwa System Management, Inc. are one of the cutting-edge Ruby/Rails company in Japan. We're proud of presenting our way on building Rails application. @pragdave says "agility is part of the fabric of Rails." in his book Agile Web Development with Rails. 
However, we need a little bit more tools to improve our Rails projects in the real world. In this sub event, we'll give you live-demo, some commentary on what agile software development is and discussion with audiences.

Keywords: Agile Software Devleopment, Test Driven Development, Scrum, Pivotal Tracker, Ruby on Rails, Bundler, RSpec, Steak, Git, Capistrano</item>
<item>The meeting of the IT system engineer to think that I earn money seriously.

I raise awareness of the money, and it is a meeting of the people who want to become the engineer who can earn one's convincible income. I take up marketing and a business trend or a topic about the money that it is not readily possible for in a topic about economy in tax or assets use in the normal technology system study society how I cut one's skill efficiently in imitation Ta'izz.

In the Ruby meeting extension, I make it.</item>
<item>Ruby's small business owner talk about own working and exchange experience each other.</item>
<item>Let's create your own T-shirt designed by Ruby on tmix! tmix is the only on-demand retail platform for consumers.

If you can create T-shirt today, you can put on it tomorrow!

This event open until Aug 27th 15:00 pm . price 1,500en (front or back print only!) White or Black T ,size S,M,L,XL,XXL Cash only.</item>
<item>The Origami Ruby (paper craft) Generated by The Ruby: Let's fold origami "Ruby" like http://dl.dropbox.com/u/4921720/RubyFoldings/IMG_0362.A3_C35_Chu25.WebSmall.JPG . In the first half, we will fold origami "Ruby" together with the origami paper that has crease fold lines. In the second half, we will fold something with foil paper and cellophane paper and read a Ruby script that generates paper with crease fold lines.</item>
<item>RubyKaigi 2010 will provide a gathering place called "Community Night" for Rubyist in the community to meet up, on August 27th (Fri) at 7pm in Mutli-purpose Hall. You can run a hackathon with your fellows, or enjoy spending time talking about technical stuff with your old friends. It's all up to you.

We would like to see so many Rubyist in the community join this event. Though we the organizers do not have any special plan for this night, we hope this gathering help your community more cohesive.

You can drink and eat in the place. Feel free to bring your own beer, pizza or something good to make the night sparkle! (the organizers do not provide foods and drink).</item>
<item>Many committers will come to RubyKaigi, so it's a good chance to ask them. In this event Ruby committers will answer questions from audience (or other committers).</item>
<item></item>
<item></item>
<item>Ruby allows us to write not only easy-to-read programs but also hard-to-read programs. In this presentation, we introduce our "artistically" hard-to-read programs written in Ruby. We also discuss its implementation techniques, if time permits.</item>
<item>I will talk about my daily life as a committer of Ruby and the Ruby Reference Manual Renewal Project.</item>
<item>In this talk, I will talk about Ruby Reference Manual Renewal Project and discuss the latest developments and future plans.</item>
<item></item>
<item>Ruby's library API is like Unix's API, but improved. Ruby tries to fix some of the problems in Unix's API. For example, non-blocking IO in Unix is provided by setting a flag when opening a file, making it difficult to specify non-blocking behavior for individual operations. Ruby overcomes this problem by providing non-blocking methods such as #read_nonblock.

Another example is the fork() system call, which has problems in multi-threaded environments. Ruby provides the #spawn method as an alternative way to launch processes safely.

This presentation will discuss techniques for API problem discovery with more examples of Ruby's improvements over Unix's API and other problematic parts of Unix which Ruby may improve in the future.</item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
<item>ThoughtWorks has been working on a long scale project at Rackspace building data center of the future using Ruby. This projects has evolved since its inception. And so has the architecture. Developing in ruby has assisted us in managing changes to the business rules at a rapid pace. We have been delivering successfully every two weeks for last three years. We would like to share our learnings from this effort.</item>
<item>As Sinatra 1.0 came out, we have a good alternative to rails(before is merb). I will introduce efforts of people around Sinatra community to eliminate gap of moving from Rails to Sinatra including my works.</item>
<item>Ubiquitous computing has opened the door to two new revolutions, data collection and data manipulation. Mobile phones, digital cameras, low cost electronics, and wireless internet access have made it possible to collect data any time, anywhere. But what are we doing with the data once it's collected? How do we navigate the oceans of data we generate daily? Where can we find a Rubyist's tools for data mining and manipulation? We'll discuss how to use DataMapper, a Ruby data access library, to make sense of data of all kinds.</item>
<item></item>
<item>Your project's software practices are deteriorating every minute the developers wait for slow tests to finish. Once developers get fed up and stop running the tests, disregard for failing builds can't be far behind, and from there it's only a short leap to the albatross of a brittle/irrelevant test suite. Luckily this can all be avoided by adopting some time-saving testing standards and practices.</item>
<item>Do you have a solid, full coverage integration test suite? You should. It is the final automated point of assurance that what you are about to push to production is not going to blow something up and cost your or your client money. I show how to integration test a real Rails application, demonstrating best practices you can apply to any setup and the latest technologies for fully covering your app, including javascript!</item>
<item></item>
<item>When I started to learn Ruby, I was awed by the code of experienced rubyists. That code was full of amazing magic tricks that I could barely understand. People called those tricks "metaprogramming".

With time, I found that metaprogramming sits right at the core of Ruby. To think in Ruby, I had to understand all those scary tricks! Feeling like a sorcerer's apprentice, I set out to write a Spell Book of metaprogramming techniques. Once I'd finished the Spell Book, metaprogramming didn't seem like black magic anymore. Instead, it just felt like any other set of techniques.

In this talk, I'll show you the content of my Spell Book, so that you don't have to go through the trouble of writing one yourself.</item>
<item></item>
<item>It's JRubyKaigi for people who love JRuby, by JRuby core developers and Japanese JRuby developers. This kaigi will make both people who like JRuby already or not love JRuby much more. It will contain great sessions; the keynote session by Thomas E.Enebo(@tom_enebo) and Charles O.Nutter(@headus), the invited talks by Nick Sieger(@nicksieger), Hiroshi Nakamura(@nahi), Takeru Sasaki(@urekat), Koichi Fujikawa(@fujibee), Yoko Harada(@yokolet). We also have time table for 6 lightning talks from general participant (we'll accept proposals beforehand).

http://j.rubykaigi.org/2010</item>
<item>In this session, tDiary users and developpers will discuss future and love for tDiary! we plan to hackathon, and if you have useful patches, please attend this session.</item>
<item>During RubyKaigi, you'll find tons of foreign Ruby Stars and Book writers here in Tsukuba. Why don't we directly tell them our questions, requirements, and of course, our deep appreciation, since these days are only once a year and are a very special chance for us. OK, of course we're all willing to tell them, but we know it's very hard to do so. We can hardly distinguish who's who, maybe we lack the courage to talk to them, especially when there's a language barrier between us. So, Asakusa.rb are producing a special event which aims to help introduce everybody to one another and facilitate communicate. We're having live discussions with, for example, 
the creators of Rails 3, the author of "The Passionate Programmer", guys from the crazy "Ruby Brigade" Seattle.rb, and lot of other foreign super Ruby Stars who are sticking around here. C'mon everybody, let's get together and talk about "your" Ruby!</item>
<item>We may not speak the same language, but we do have one language in common. So, we can code together!

Armed with a list of pair programming phrases in English and Japanese, let's work together on a project in Ruby. Coding together can help us bridge the artificial boundaries created by language, culture, and distance, and can create friendships that last beyond the conference.

Unicorns and ponies for everyone!</item>
<item>A Kaigi for "jpmobile" developers. Jpmobile is the de facto standard Rails plugin for Japanese mobile phones. Almost all of "jpmobile" developers will come to this session and discuss the future of jpmobile, then 
start to struggle to make it real, that means, write codes. The main topics will be supporting Rails 3.0+ and Ruby 1.9, building Rack middleware.

Anyone who wants to contribute to jpmobile should attend this Kaigi.</item>
<item>Let's trade pubkeys! A key signing party is a get-together of people who use the PGP encryption system with the purpose of allowing those people to sign each others keys. Key signing parties serve to extend the web of trust to a great degree.

If you get interested you need some preparation. Take a look at 
http://qwik.atdot.net/rubykaigi2010keysignparty/FrontPageJa.html</item>
<item>Stretch your fingers and warm up your control and meta keys. Bring your laptop and .emacs file. Let's show each other our techniques for writing Ruby code using Emacs.

This is a workshop for both beginners and advanced users to share tips and tricks for developing Ruby code with Emacs.</item>
<item>Cucumber is a very nice testing framework. But the major feature, execute natural language text as tests, varies from familiar "Ruby syntax". Therefore, you may feel inhibited to take the first step (so I was.). In this sub-event, we try Cucumber to build a simple Rails application. It will tell you that cucumber is not so difficult to start and has great power to describe software test.</item>
<item>An open meeting where Rubyists discuss what we can do for Ruby.</item>
<item>About half of Rubyists are using Vim to code Ruby. Vim is one of the ultimate tools for software developments, which vary among programmers. Why don't you exchange the ways you use Vim?

For example, I am using some Vim plugins such as quickrun.vim, neocomplcache, and smartchr.vim to code Ruby efficiently. Although my ~/.vimrc is less than just 3000 lines, there are plenty of good tricks worth telling to you. I'd like to tell you about my Vim knowledge, and learn how you yourself are optimizing Vim.

I'd like to make the event in English, because most Japanese have already been learning English for a while. Of course, attendees are supposed to be familiar with Ruby and Vim, because they are the lingua franca of this event. I can help translating Japanese to English or English to Japanese. Even if you don't have a lot of confidence with other languages, you can still attend this event.

Other editor users such as Emacs users also can attend this event. In general, tech religious wars are fun.</item>
<item>The Origami Ruby (paper craft) Generated by The Ruby: Let's fold origami "Ruby" like http://dl.dropbox.com/u/4921720/RubyFoldings/IMG_0362.A3_C35_Chu25.WebSmall.JPG . In the first half, we will fold origami "Ruby" together with the origami paper that has crease fold lines. In the second half, we will fold something with foil paper and cellophane paper and read a Ruby script that generates paper with crease fold lines.</item>
<item></item>
<item>We show the construction/operation methods for Cloud with Ruby. (ex. NIFTY Cloud)</item>
<item>Castoro is a new scalable storage system implemented in Ruby. In this session, we talk about why we decided to develop a new storage system, Castoro. We will also compare Castoro against other distributed storage systems, such as MogileFS and kumoFS.</item>
<item>On August 31st, 2000, A slightly unusual Wiki was introduced on ruby-list. It was [ruby-list:24661] The first practical dRuby application, RWiki.

RWiki is strongly opinionated software. RWiki was introduced as an demonstration of the usage of various Ruby libraries, but its unique implementation also reflects the author's opinion. The most significant feature of RWiki is that it is an in-memory application that contains both the database and objects all in a single process. Which is rather reminiscent of some recent buzzwords: NoSQL and In-Memory.

A couple days after this presentation, RWiki will celebrate its tenth year anniversary. I am currently running several active RWiki sites. These sites have over 30 thousand pages with a process size exceeding 1Gb. In this presentation, I will tell a little story of how these RWiki sites achieved scale and volume.</item>
<item>While there is a lot of excitement surrounding MongoDB and the NoSQL movement, MongoDB is all about practicality, pragmatism and performance. MongoDB boasts a robust feature set that provides a pragmatic blend of rich functionality, performance and scalability that today's software developers need, and all at a relatively low barrier to entry.</item>
<item></item>
<item>IronRuby is the new implementation of the Ruby language from Microsoft which opens the .NET world to Rubyists. This brings a whole set of new opportunities to Rubyists like using Ruby to write RIA applications, providing enhanced user interface to Ruby applications and more. Come and see the new possibilities that IronRuby brings to the Ruby world!</item>
<item></item>
<item>In Matsue City and SHIMANE prefecture of local government, many common business systems began to remake by Ruby/Rails since 2007. Now, the wave of Ruby/Rails spreads to enterprise system fields and prepheral regions. Based many experience and results, how to built up the enterprise systems by Ruby/Rails, how to built up the long term maintenance systems, challenging to high productivty and another Agile development.</item>
<item>I have been a member of RubyKaigi organizer since 2006 and also am the founder of Regional RubyKaigi started in 2008. "Kaigis" have changed the landscape of the Ruby community in Japan. These 2 years mean a lot to me. I'd love to show you what happened is and tell you what I believe is going to happen in the Ruby community in Japan.</item>
<item></item>
<item></item>
<item></item>
<item>I taked over the maintainer of the bigdecimal standard library in the beginning of this year. Today, the bigdecimal library has some problems in its behaviors, such as interacting convention with any other number classes. In this presentation, I will demonstrate these problematic behaviors and express their appropriate characteristics in the next version of Ruby. Additionally, I will discuss the number system which the future version of Ruby, that is 2.0, should have.</item>
<item>NArray is an n-dimensional numerical array library developed for use in science fields, but it is usable for handling binary data efficiently. I talk about NArray for the first time after 10 years from the first release. I will also present topics including the next version of NArray, and distributed scientific computing using Ruby for multi-core era.</item>
<item>Yarv2llvm is a translator which converts instruciton set of VM of CRuby (aka YARV) into llvm. The feature of yarv2llvm is to use the type inference for raising the execution efficiency of generated llvm. Yarv2llvm get a results. For example it executes the program for computing fibonacci number 40 times faster than Ruby1.9. But it was clarified to be able not to convert all Ruby programs into llvm well either though it had expected beforehand. I will show the example of programming Ruby that cannot be converted with yarv2llvm well and the settlement plan. In addition I will introduce the outline of the next generation translator (ytl) that I am developing to support all specification of Ruby.</item>
<item>We developed a AOT Compiler, which translates Ruby script into native code to run Ruby script faster.

In this presentation, we show the composition of CRuby and the challenges we overcome to achieve full compatible AOT compiler for the CRuby. We also show the design and the implementation of our AOT compiler. We evaluated the compatibility and performance by using tests and benchmarks included in CRuby release.</item>
<item>We developed a memory profiler for Ruby programming language that fulfills the requirement for measuring and analyzing the memory usage of Ruby applications.

In this presentation, we will describe the features, the design and the implementation of the memory profiler. We will also show the performance evaluation and demonstrate the memory profiler in action.</item>
<item></item>
<item>This talk explains about rurema-search, Ruby reference manual in Japanese search Web application, and how to create rurema-search. Rurema-search uses Ruby 1.9.1 (MRI) as a Ruby interpreter, groonga as a full-text search engine and data store and rroonga as a Ruby-groonga interface. Those technologies are particularly explained in 'how to create rurema-search' time.

rurema-search (Japanese): http://rurema.clear-code.com/</item>
<item>Turn the multimedia render loop inside out. Cooperatively scheduling lightweight Ruby threads on a virtual clock allows you to reason about the concurrent code in your game and perform complex synchronization tasks without even realizing it. Ditch the nested trees of update() calls by making time a first class citizen!</item>
<item></item>
<item>Even before the release of Rails, we have created many useful tools and applications in Ruby. In this post-Rails world, however, the way we approach application development has changed. In this session, I will talk about my experiences in adapting my way of thinking to a post-Rails world.</item>
<item>One of the biggest challenges in modern web application development is the difficulty of collaborating with web designers. For example, eRuby requires Ruby code to be embedded inside template files, often resulting in broken HTML designs, making life difficult for web designers. To solve this problem, various template engines which don't break HTML have been created. The trade off of these template engines, however, is that they sacrifice other features such as performance or usability.

In this session, a template engine that doesn't break HTML while also preserving performance and usability will be introduced. This session will also explore a variety of problems relating to template engines, such as the problems with techniques used in existing template engines, and whether simple "not breaking" HTML designs is sufficient. This will be definitive session about template engines for web application development. If you are interested in web design, you must attend this session.</item>
<item></item>
<item>An open meeting ("kaigi") about Regional RubyKaigi for anyone who is interested.</item>
<item>In the RubyKaigi, we have many foreign Rubyists. And we also have Japanese rubyists who are living abroad and foreign rubyists who are living in Japan. Please join this sub-event to discuss with such 'rubyists living abroad'! If you are interested in 'living in Japan as a foreign rubyist', please feel free to ask your questions. Both English language and Japanese lauguage are welcome in this sub-event.</item>
<item>Short sessions and Demos for Game Developement with Ruby. Demos are open to all.</item>
<item>During RubyKaigi, you'll find tons of foreign Ruby Stars and Book writers here in Tsukuba. Why don't we directly tell them our questions, requirements, and of course, our deep appreciation, since these days are only once a year and are a very special chance for us. OK, of course we're all willing to tell them, but we know it's very hard to do so. We can hardly distinguish who's who, maybe we lack the courage to talk to them, especially when there's a language barrier between us. So, Asakusa.rb are producing a special event which aims to help introduce everybody to one another and facilitate communicate. We're having live discussions with, for example, the creators of Rails 3, the author of "The Passionate Programmer", guys from the crazy "Ruby Brigade" Seattle.rb, and lot of other foreign super Ruby Stars who are sticking around here. C'mon everybody, let's get together and talk about "your" Ruby!</item>
<item>"Termtter" is a twitter client, written in Ruby, and based on terminal applications/softwares or shells.

TermtterKaigi does:

* Hackathon 
* Lightning Talks 
* Refactoring Termtter 
* Tutorial of Termtter 
* Q&amp;A of Termtter</item>
<item>LDAP is widely used for directory service, defined on RFC 4510-4519.

Ruby has library to manage LDAP, such as "Ruby/LDAP", "Net::LDAP" and "ActiveLdap". Unfortunately, no found enough documentation on the internet to determine library which is better.

This session introduce case of each library for Ruby community to determine for choosing which library.</item>
<item>Do you know the website that 45% of Japanese women in their 30's are 
using regularly? 
COOKPAD (cookpad.com) is the world's greatest user-generated recipe 
site with 9.8 million monthly users and over 800 thousand recipes. 
So what is the reason for its continued growth as the largest Ruby on 
Rails site in Japan? 
Kenta Hashimoto, our CTO, will introduce you to our practical 
technology and development environment.

We will focus on these 3 points:

・Ruby; the value proposition for COOKPAD 
・How we scale and develop COOKPAD 
・COOKPAD from the eyes of non-Japanese engineers

The slides will be in English, and the lecture will be given in 
Japanese, so non-Japanese are more than welcome to participate.

&lt;time table&gt; 
12:00-12:50 - 'Ruby powering 9 million dining tables' 
12:50-13:20 - Q&amp;A and Lunch time（Please bring your lunch）

&lt;Notice&gt; 
COOKPAD has branch offices in the US, and is always eager to take in 
engineers regardless of nationality. We would appreciate participation 
of non-Japanese technicians interested in working with a Japanese 
company.

&lt;Reference&gt; 
Cookpad Developer Blog 
http://techlife.cookpad.com/</item>
<item>This hands-on is for Window user who 'd like to build own ruby, extended libs and gem. From installation of the compiler to build own extended library.</item>
<item>Let's fold origami "Ruby" like http://dl.dropbox.com/u/4921720/RubyFoldings/IMG_0362.A3_C35_Chu25.WebSmall.JPG. In the first half, we will fold origami "Ruby" together with the origami paper that has crease fold lines. In the second half, we will fold something with foil paper and cellophane paper and read a Ruby script that generates paper with crease fold lines.</item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
<item>Thomas and Charles will give an overview of the state of the JRuby project.
They will also give sneak peeks of JRuby's future.</item>
<item>From introduction of JRuby to howtos of RedBridge. You’ll get better understandings of JRuby, which leads you effectively to RedBrdige API.</item>
<item>Rubyist, it's time to develop your Rails app on Google App Engine.</item>
<item></item>
<item>Using Java EE technology enhance the power of JRuby on Rails(JRoR) when you use JRoR through SOAP Web service. In this session, I mention 10 things how to enhance the power of JRoR.</item>
<item>For all who want to use Hadoop but never to write Java.
Hadoop Papyrus can make you happy! 
You can analyze big logs by Ruby-base DSL w/o regard for MapReduce.</item>
<item>Aims; extracting what is where in JRuby source code, showing how those interacts when, and hacking/troubleshooting it by examples in 20 min.</item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
<item></item>
</string-array>

<string-array name="lang">
<item>en</item>
<item>en</item>
<item>ja</item>
<item>ja</item>
<item></item>
<item>en</item>
<item>ja</item>
<item></item>
<item>ja</item>
<item>ja</item>
<item>en</item>
<item>en</item>
<item></item>
<item>en</item>
<item>en</item>
<item>en</item>
<item></item>
<item>ja</item>
<item>en</item>
<item>en,ja</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item></item>
<item>ja</item>
<item>ja</item>
<item></item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item></item>
<item>ja</item>
<item></item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>en</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>en</item>
<item>en</item>
<item>en</item>
<item></item>
<item>en</item>
<item>en</item>
<item></item>
<item>en</item>
<item></item>
<item>ja,en</item>
<item>ja</item>
<item>en</item>
<item>en,ja</item>
<item>ja</item>
<item>ja</item>
<item>en</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item></item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>en</item>
<item></item>
<item>en</item>
<item></item>
<item>ja</item>
<item>ja</item>
<item></item>
<item>en</item>
<item>en</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>en</item>
<item></item>
<item>ja</item>
<item>en</item>
<item></item>
<item>ja</item>
<item>ja</item>
<item></item>
<item>ja</item>
<item>en</item>
<item>ja</item>
<item>en</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>ja,en</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>en</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>en</item>
<item>ja</item>
<item>ja</item>
<item></item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item></item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>en</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
<item>ja</item>
</string-array>

</resources>